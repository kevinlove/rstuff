View(prepDD)
institutionCodes <- unique(dd$institutioncode)
xx <- data.frame()
for (i in 1:length(institutionCodes)) {
yy <- count(dd[dd$institutioncode==institutionCodes[i],]$collectioncode)
cc <- cbind(institutionCodes[i],yy)
xx <- rbind(xx,cc)
}
xx <- xx[order(xx$freq,decreasing = TRUE),]
##Histram them
barplot(xx$freq,names.arg = paste(xx$`institutionCodes[i]`,xx$x,sep="-"),las=2)
trimDD <- dd[dd$collectioncode %in% xx$x,]
names(trimDD) <- c("institutioncode","collectioncode","catalognumber","preps")
names(trimDD)
prepDD <- count(trimDD,"preps")
prepDD <- prepDD[order(-prepDD$freq),]
##Histogram them
barplot(prepDD$freq,names.arg = prepDD$institutioncode, las=2)
View(prepDD)
length(prepDD$preps)
getwd(0)
getwd()
write.csv(prepDD, row.names = FALSE, file = "lepomisPreps.csv")
x <- readLines(n=3)
sapply(strsplit(x, "(//|/)(www[.])?"), "[", 2)
x <- readLines(n=3)
sapply(strsplit(x, "(//|/)(www[.])?"), "[", 2)
?strsplit
grep(":$",x)
grep(":",x)
grep(":8080",x)
grep("(//|/)(www[.])?",x)
http://domain.com:8080/123
strsplit(x, "(//|/)(www[.])?")
strsplit(x, "(//|/)(www[.])(:8080)?")
strsplit(x, "(//|/)(www[.])?")
x <- readLines(n=3)
sapply(strsplit(x, "(//|/)(www[.])?"), "[", 2)
x <- sapply(strsplit(x, "(//|/)(www[.])?"), "[", 2)
grep("(//|/)(www[.])?",x)
strsplit(x, ":")
x <- sapply(strsplit(x, ":"), "[", 1)
setwd("~/Documents/randysinger/code/rstuff/bluegill")
library(ridigbio)
library(plyr)
library(jsonlite)
library(httr)
library(dplyr)
library(progress)
library(scales)
library(plotrix)
library(plotly)
library(reshape2)
library(countrycode)
library(rworldmap)
load("lots-o-records.rdata")
bd <- read.csv("cleaned-recordsets.csv")
excludes <- c("MNHN","NRM","INPA","ROM")
hugeDF <- merge(hugeDF,bd,by.x = "recordset",by.y = "uuid")
hugeDF <- hugeDF[!hugeDF$ASIHCode %in% excludes,]
stdPreps <- read.csv("../vocab/lepomisPreps.csv")
stdPreps <- stdPreps[1:2]
bbD <- hugeDF
gop <- merge(bbD,stdPreps,by="preps",all.x = TRUE)
bbRS <- plyr::count(gop,c("ASIHCode","collectioncode","institutioncode","recordset"))
pb <- progress_bar$new(total = length(bbRS$institutioncode))
for(i in 1:length(bbRS$ASIHCode))
{
pb$tick()
aaaa <- bbRS[bbRS$ASIHCode==bbRS$ASIHCode[i],]
ASIHcode <- unique(aaaa$ASIHCode)
dir.create(as.character(ASIHcode),showWarnings = FALSE)
dir.create(paste(as.character(ASIHcode),"/data",sep = ""),showWarnings = FALSE)
dir.create(paste(as.character(ASIHcode),"/figures",sep = ""),showWarnings = FALSE)
recordset <- if(length(aaaa$recordset) > 1){URLencode(toJSON(as.character(aaaa$recordset)))}else{paste("%22",URLencode(as.character(aaaa$recordset)),"%22",sep="")}
collectioncode <- if(length(aaaa$collectioncode) > 1){URLencode(toJSON(as.character(aaaa$collectioncode)))}else{paste("%22",URLencode(as.character(aaaa$collectioncode)),"%22",sep="")}
institutioncode <- if(length(aaaa$institutioncode) > 1){URLencode(toJSON(as.character(aaaa$institutioncode)))}else{paste("%22",URLencode(as.character(aaaa$institutioncode)),"%22",sep="")}
contJS <- fromJSON(paste("http://search.idigbio.org/v2/summary/top/records/?rq={%22recordset%22:",recordset,",%22collectioncode%22:",collectioncode,",%22institutioncode%22:",institutioncode,"}&top_fields=[%22continent%22]&count=5000",sep=""))
contDF <- data.frame(Continent=names(contJS$continent),Count=unlist(contJS$continent),row.names = NULL)
locality_plot <- function(ASIHcode,contDF){
#Locality plot
# Pie Chart with Percentages
if (length(contDF$Continent) > 0){
pdf(paste(ASIHcode,"/figures/",ASIHcode,"-localities-continents-PIE.pdf",sep=""))
slices <- contDF$Count
lbls <- contDF$Continent
pie3D(slices,labels=lbls,explode=0.01,main=paste0(ASIHcode," Collection Localities- Continent"))
#         pie(slices,labels = lbls,
#             main=paste(ASIHcode," Collection Localities- Continent",sep=""))
dev.off()
ds <- data.frame(labels = contDF$Continent,
values = contDF$Count)
p <- plot_ly(ds, labels = labels, values = values, type = "pie") %>%
layout(title = paste0(ASIHcode," Collection Localities- Continent"))
plotly_IMAGE(p,format = "png",out_file =paste0(ASIHcode,"/figures/",ASIHcode,"-localities-continents-PLOTLY.png"),height = 1080 )
}else{
print(paste0("No Locality data-",ASIHcode))
}
locality_plot(ASIHcode,contDF)
##World Choropleth Map
cuntJS <- fromJSON(paste("http://search.idigbio.org/v2/summary/top/records/?rq={%22recordset%22:",recordset,",%22collectioncode%22:",collectioncode,",%22institutioncode%22:",institutioncode,"}&top_fields=[%22countrycode%22]&count=5000",sep=""))
cuntDF <- data.frame(Country=names(cuntJS$country),Count=unlist(cuntJS$country),row.names = NULL)
cuntDF$Country <- toupper(cuntDF$Country)
if (length(cuntDF$Country) > 0){
# light grey boundaries
l <- list(color = toRGB("grey"), width = 0.5)
# specify map projection/options
g <- list(showframe = FALSE,showcoastlines = FALSE,projection = list(type = 'Mercator'))
f <- plot_ly(cuntDF, z = Count, text = Country, locations = Country, type = 'choropleth',
color = Count, colors = 'Blues', marker = list(line = l),
colorbar = list(title = 'Country')) %>%
layout(title = 'Records by Country',geo = g)
plotly_IMAGE(f,format = "png",out_file =paste0(ASIHcode,"/figures/",ASIHcode,"-localities-continents-PLOTLY-MAP.png"),height = 1080 )
}else{
print(paste0("No Locality data-",ASIHcode))
}
famsJS <- fromJSON(paste("http://search.idigbio.org/v2/summary/top/records/?rq={%22recordset%22:",recordset,",%22collectioncode%22:",collectioncode,",%22institutioncode%22:",institutioncode,"}&top_fields=[%22family%22]&count=5000",sep=""))
famDF <- data.frame(Family=names(famsJS$family),Count=unlist(famsJS$family),row.names = NULL)
write.csv(famDF, file = paste(ASIHcode,"/data/",ASIHcode,"-RAW_famlies.csv",sep=""),row.names = FALSE)
}
Sys.setenv("plotly_username"="kevinlove")Sys.setenv("plotly_api_key"="spafepkgpf")
Sys.setenv("plotly_username"="kevinlove");Sys.setenv("plotly_api_key"="spafepkgpf")
pb <- progress_bar$new(total = length(bbRS$institutioncode))
for(i in 1:length(bbRS$ASIHCode))
{
pb$tick()
aaaa <- bbRS[bbRS$ASIHCode==bbRS$ASIHCode[i],]
ASIHcode <- unique(aaaa$ASIHCode)
dir.create(as.character(ASIHcode),showWarnings = FALSE)
dir.create(paste(as.character(ASIHcode),"/data",sep = ""),showWarnings = FALSE)
dir.create(paste(as.character(ASIHcode),"/figures",sep = ""),showWarnings = FALSE)
recordset <- if(length(aaaa$recordset) > 1){URLencode(toJSON(as.character(aaaa$recordset)))}else{paste("%22",URLencode(as.character(aaaa$recordset)),"%22",sep="")}
collectioncode <- if(length(aaaa$collectioncode) > 1){URLencode(toJSON(as.character(aaaa$collectioncode)))}else{paste("%22",URLencode(as.character(aaaa$collectioncode)),"%22",sep="")}
institutioncode <- if(length(aaaa$institutioncode) > 1){URLencode(toJSON(as.character(aaaa$institutioncode)))}else{paste("%22",URLencode(as.character(aaaa$institutioncode)),"%22",sep="")}
contJS <- fromJSON(paste("http://search.idigbio.org/v2/summary/top/records/?rq={%22recordset%22:",recordset,",%22collectioncode%22:",collectioncode,",%22institutioncode%22:",institutioncode,"}&top_fields=[%22continent%22]&count=5000",sep=""))
contDF <- data.frame(Continent=names(contJS$continent),Count=unlist(contJS$continent),row.names = NULL)
locality_plot <- function(ASIHcode,contDF){
#Locality plot
# Pie Chart with Percentages
if (length(contDF$Continent) > 0){
pdf(paste(ASIHcode,"/figures/",ASIHcode,"-localities-continents-PIE.pdf",sep=""))
slices <- contDF$Count
lbls <- contDF$Continent
pie3D(slices,labels=lbls,explode=0.01,main=paste0(ASIHcode," Collection Localities- Continent"))
#         pie(slices,labels = lbls,
#             main=paste(ASIHcode," Collection Localities- Continent",sep=""))
dev.off()
ds <- data.frame(labels = contDF$Continent,
values = contDF$Count)
p <- plot_ly(ds, labels = labels, values = values, type = "pie") %>%
layout(title = paste0(ASIHcode," Collection Localities- Continent"))
plotly_IMAGE(p,format = "png",out_file =paste0(ASIHcode,"/figures/",ASIHcode,"-localities-continents-PLOTLY.png"),height = 1080 )
}else{
print(paste0("No Locality data-",ASIHcode))
}
locality_plot(ASIHcode,contDF)
##World Choropleth Map
cuntJS <- fromJSON(paste("http://search.idigbio.org/v2/summary/top/records/?rq={%22recordset%22:",recordset,",%22collectioncode%22:",collectioncode,",%22institutioncode%22:",institutioncode,"}&top_fields=[%22countrycode%22]&count=5000",sep=""))
cuntDF <- data.frame(Country=names(cuntJS$country),Count=unlist(cuntJS$country),row.names = NULL)
cuntDF$Country <- toupper(cuntDF$Country)
if (length(cuntDF$Country) > 0){
# light grey boundaries
l <- list(color = toRGB("grey"), width = 0.5)
# specify map projection/options
g <- list(showframe = FALSE,showcoastlines = FALSE,projection = list(type = 'Mercator'))
f <- plot_ly(cuntDF, z = Count, text = Country, locations = Country, type = 'choropleth',
color = Count, colors = 'Blues', marker = list(line = l),
colorbar = list(title = 'Country')) %>%
layout(title = 'Records by Country',geo = g)
plotly_IMAGE(f,format = "png",out_file =paste0(ASIHcode,"/figures/",ASIHcode,"-localities-continents-PLOTLY-MAP.png"),height = 1080 )
}else{
print(paste0("No Locality data-",ASIHcode))
}
famsJS <- fromJSON(paste("http://search.idigbio.org/v2/summary/top/records/?rq={%22recordset%22:",recordset,",%22collectioncode%22:",collectioncode,",%22institutioncode%22:",institutioncode,"}&top_fields=[%22family%22]&count=5000",sep=""))
famDF <- data.frame(Family=names(famsJS$family),Count=unlist(famsJS$family),row.names = NULL)
write.csv(famDF, file = paste(ASIHcode,"/data/",ASIHcode,"-RAW_famlies.csv",sep=""),row.names = FALSE)
}
##Summary Figures- total record count
pdf("asih-by-records.pdf")
srAC <- plyr::count(hugeDF,"ASIHCode")
srAC <- srAC[order(-srAC$freq),]
barplot(srAC$freq, main = "Specimen Records by ASIH Code", names.arg = srAC$ASIHCode,las=2)
dev.off()
x <- list(
title = "ASIH Code"
)
y <- list(
title = "Number of Records"
)
pl <- plot_ly(
x = srAC$ASIHCode,
y = srAC$freq,
name = "Records",
type = "bar") %>%
layout(xaxis = x, yaxis = y)
pl
plotly_IMAGE(pl,format = "png",out_file ="asih-by-records-PLOTLY.png",height = 1080 )
## Total specimen count
pdf("asih-by-specimens.pdf")
larval <- rbind.fill(hugeDF[grep("egg",hugeDF$collectioncode),],hugeDF[grep("larval",hugeDF$collectioncode),])
sAC <- aggregate(individualcount ~ ASIHCode, data = hugeDF[!hugeDF$catalognumber %in% larval$catalognumber,],sum)
sAC <- sAC[order(-sAC$individualcount),]
barplot(sAC$individualcount, main = "Specimens by ASIH Code", names.arg = sAC$ASIHCode,las=2)
dev.off()
x <- list(title = "ASIH Code")
y <- list(title = "Number of Specimens (millions)")
pl <- plot_ly(
x = sAC$ASIHCode,
y = sAC$individualcount,
name = "Individuals",
type = "bar") %>%
layout(xaxis = x, yaxis = y)
pl
plotly_IMAGE(pl,format = "png",out_file ="asih-by-specimens.png",height = 1080 )
pdf("asih-by-specimens-COLOR.pdf")
foff <- merge(srAC,sAC, by.x = "ASIHCode",all.x = TRUE)
names(foff) <- c("ASIHCode", "RecordCount", "SpecimenCount")
p1 <- ggplot(data=foff,aes(x=reorder(foff$ASIHCode,foff$RecordCount),y=RecordCount,fill=RecordCount))+
geom_bar(stat="identity")+
coord_flip() +
ggtitle("Digitized ASIH Fish Collections") +
xlab("ASIH Code")
p1
dev.off()
pdf("asih-by-specimens-STACKED.pdf")
foff1 <- merge(srAC,sAC, by.x = "ASIHCode",all.x = TRUE)
names(foff1) <- c("ASIHCode", "RecordCount", "SpecimenCount")
foff1 <- melt(foff1)
p2 <- ggplot(foff1,aes(x=reorder(foff1$ASIHCode,foff1$value,mean,na.rm=TRUE),y=value,fill=variable,color=variable)) +
geom_bar(stat="identity",position = "stack") +
coord_flip() +
ggtitle("Digitized ASIH Fish Collections") +
xlab("ASIH Code") +
ylab("Count")
p2
dev.off()
cuntDF
?country2Region
country2Region(regionType = "GEO3", inFile = cuntDF,joinCode = "ISO3",FUN = "sum")
country2Region(regionType = "GEO3", inFile = cuntDF,joinCode = "ISO3",FUN = "sum",nameDataColumn = "Country")
country2Region(regionType = "GEO3", inFile = cuntDF,joinCode = "ISO3",FUN = "sum",nameDataColumn = Country)
country2Region(regionType = "GEO3", inFile = cuntDF,joinCode = "ISO3",FUN = "sum",nameDataColumn = "Country")
country2Region(regionType = "GEO3", inFile = cuntDF,joinCode = "ISO3",FUN = "sum",nameDataColumn = "Country",nameJoinColumn = "Region")
cuntDF$Region <- ""
View(cuntDF)
country2Region(regionType = "GEO3", inFile = cuntDF,joinCode = "ISO3",FUN = "sum",nameDataColumn = "Country",nameJoinColumn = "Region")
country2Region(regionType = "GEO3", inFile = cuntDF,joinCode = "ISO3",FUN = "identity",nameDataColumn = "Country",nameJoinColumn = "Region")
country2Region(regionType = "GEO3", inFile = cuntDF,joinCode = "ISO3",FUN = "identity",nameDataColumn = "Country",nameJoinColumn = "Country")
country2Region(regionType = "GEO3", inFile = cuntDF,joinCode = "ISO3",FUN = "sum",nameDataColumn = "Count",nameJoinColumn = "Country")
country2Region(regionType = "GEO3major", inFile = cuntDF,joinCode = "ISO3",FUN = "sum",nameDataColumn = "Count",nameJoinColumn = "Country")
pb <- progress_bar$new(total = length(bbRS$institutioncode))
for(i in 1:length(bbRS$ASIHCode))
{
pb$tick()
aaaa <- bbRS[bbRS$ASIHCode==bbRS$ASIHCode[i],]
ASIHcode <- unique(aaaa$ASIHCode)
dir.create(as.character(ASIHcode),showWarnings = FALSE)
dir.create(paste(as.character(ASIHcode),"/data",sep = ""),showWarnings = FALSE)
dir.create(paste(as.character(ASIHcode),"/figures",sep = ""),showWarnings = FALSE)
recordset <- if(length(aaaa$recordset) > 1){URLencode(toJSON(as.character(aaaa$recordset)))}else{paste("%22",URLencode(as.character(aaaa$recordset)),"%22",sep="")}
collectioncode <- if(length(aaaa$collectioncode) > 1){URLencode(toJSON(as.character(aaaa$collectioncode)))}else{paste("%22",URLencode(as.character(aaaa$collectioncode)),"%22",sep="")}
institutioncode <- if(length(aaaa$institutioncode) > 1){URLencode(toJSON(as.character(aaaa$institutioncode)))}else{paste("%22",URLencode(as.character(aaaa$institutioncode)),"%22",sep="")}
contJS <- fromJSON(paste("http://search.idigbio.org/v2/summary/top/records/?rq={%22recordset%22:",recordset,",%22collectioncode%22:",collectioncode,",%22institutioncode%22:",institutioncode,"}&top_fields=[%22countrycode%22]&count=5000",sep=""))
contDF <- data.frame(Continent=names(contJS$continent),Count=unlist(contJS$continent),row.names = NULL)
contDF <- country2Region(regionType = "GEO3major", inFile = contDF,joinCode = "ISO3",FUN = "sum",nameDataColumn = "Count",nameJoinColumn = "Country")
contDF <- names(c("Continent","Count"))
locality_plot <- function(ASIHcode,contDF){
#Locality plot
# Pie Chart with Percentages
if (length(contDF$Continent) > 0){
pdf(paste(ASIHcode,"/figures/",ASIHcode,"-localities-continents-PIE.pdf",sep=""))
slices <- contDF$Count
lbls <- contDF$Continent
pie3D(slices,labels=lbls,explode=0.01,main=paste0(ASIHcode," Collection Localities- Continent"))
#         pie(slices,labels = lbls,
#             main=paste(ASIHcode," Collection Localities- Continent \n using GEO-3 Major",sep=""))
dev.off()
ds <- data.frame(labels = contDF$Continent,
values = contDF$Count)
p <- plot_ly(ds, labels = labels, values = values, type = "pie") %>%
layout(title = paste0(ASIHcode," Collection Localities- Continent"))
plotly_IMAGE(p,format = "png",out_file =paste0(ASIHcode,"/figures/",ASIHcode,"-localities-continents-PLOTLY.png"),height = 1080 )
}else{
print(paste0("No Locality data-",ASIHcode))
}
locality_plot(ASIHcode,contDF)
##World Choropleth Map
cuntJS <- fromJSON(paste("http://search.idigbio.org/v2/summary/top/records/?rq={%22recordset%22:",recordset,",%22collectioncode%22:",collectioncode,",%22institutioncode%22:",institutioncode,"}&top_fields=[%22countrycode%22]&count=5000",sep=""))
cuntDF <- data.frame(Country=names(cuntJS$country),Count=unlist(cuntJS$country),row.names = NULL)
cuntDF$Country <- toupper(cuntDF$Country)
if (length(cuntDF$Country) > 0){
# light grey boundaries
l <- list(color = toRGB("grey"), width = 0.5)
# specify map projection/options
g <- list(showframe = FALSE,showcoastlines = FALSE,projection = list(type = 'Mercator'))
f <- plot_ly(cuntDF, z = Count, text = Country, locations = Country, type = 'choropleth',
color = Count, colors = 'Blues', marker = list(line = l),
colorbar = list(title = 'Country')) %>%
layout(title = 'Records by Country',geo = g)
plotly_IMAGE(f,format = "png",out_file =paste0(ASIHcode,"/figures/",ASIHcode,"-localities-continents-PLOTLY-MAP.png"),height = 1080 )
}else{
print(paste0("No Locality data-",ASIHcode))
}
famsJS <- fromJSON(paste("http://search.idigbio.org/v2/summary/top/records/?rq={%22recordset%22:",recordset,",%22collectioncode%22:",collectioncode,",%22institutioncode%22:",institutioncode,"}&top_fields=[%22family%22]&count=5000",sep=""))
famDF <- data.frame(Family=names(famsJS$family),Count=unlist(famsJS$family),row.names = NULL)
write.csv(famDF, file = paste(ASIHcode,"/data/",ASIHcode,"-RAW_famlies.csv",sep=""),row.names = FALSE)
}
names(cuntJS$countrycode)
names(cuntJS$country)
names(cuntJS$countrycode)
pb <- progress_bar$new(total = length(bbRS$institutioncode))
for(i in 1:length(bbRS$ASIHCode))
{
pb$tick()
aaaa <- bbRS[bbRS$ASIHCode==bbRS$ASIHCode[i],]
ASIHcode <- unique(aaaa$ASIHCode)
dir.create(as.character(ASIHcode),showWarnings = FALSE)
dir.create(paste(as.character(ASIHcode),"/data",sep = ""),showWarnings = FALSE)
dir.create(paste(as.character(ASIHcode),"/figures",sep = ""),showWarnings = FALSE)
recordset <- if(length(aaaa$recordset) > 1){URLencode(toJSON(as.character(aaaa$recordset)))}else{paste("%22",URLencode(as.character(aaaa$recordset)),"%22",sep="")}
collectioncode <- if(length(aaaa$collectioncode) > 1){URLencode(toJSON(as.character(aaaa$collectioncode)))}else{paste("%22",URLencode(as.character(aaaa$collectioncode)),"%22",sep="")}
institutioncode <- if(length(aaaa$institutioncode) > 1){URLencode(toJSON(as.character(aaaa$institutioncode)))}else{paste("%22",URLencode(as.character(aaaa$institutioncode)),"%22",sep="")}
contJS <- fromJSON(paste("http://search.idigbio.org/v2/summary/top/records/?rq={%22recordset%22:",recordset,",%22collectioncode%22:",collectioncode,",%22institutioncode%22:",institutioncode,"}&top_fields=[%22countrycode%22]&count=5000",sep=""))
contDF <- data.frame(Continent=names(contJS$continent),Count=unlist(contJS$continent),row.names = NULL)
contDF <- country2Region(regionType = "GEO3major", inFile = contDF,joinCode = "ISO3",FUN = "sum",nameDataColumn = "Count",nameJoinColumn = "Continent")
contDF <- names(c("Continent","Count"))
locality_plot <- function(ASIHcode,contDF){
#Locality plot
# Pie Chart with Percentages
if (length(contDF$Continent) > 0){
pdf(paste(ASIHcode,"/figures/",ASIHcode,"-localities-continents-PIE.pdf",sep=""))
slices <- contDF$Count
lbls <- contDF$Continent
pie3D(slices,labels=lbls,explode=0.01,main=paste0(ASIHcode," Collection Localities- Continent"))
#         pie(slices,labels = lbls,
#             main=paste(ASIHcode," Collection Localities- Continent \n using GEO-3 Major",sep=""))
dev.off()
ds <- data.frame(labels = contDF$Continent,
values = contDF$Count)
p <- plot_ly(ds, labels = labels, values = values, type = "pie") %>%
layout(title = paste0(ASIHcode," Collection Localities- Continent"))
plotly_IMAGE(p,format = "png",out_file =paste0(ASIHcode,"/figures/",ASIHcode,"-localities-continents-PLOTLY.png"),height = 1080 )
}else{
print(paste0("No Locality data-",ASIHcode))
}
locality_plot(ASIHcode,contDF)
##World Choropleth Map
cuntJS <- fromJSON(paste("http://search.idigbio.org/v2/summary/top/records/?rq={%22recordset%22:",recordset,",%22collectioncode%22:",collectioncode,",%22institutioncode%22:",institutioncode,"}&top_fields=[%22countrycode%22]&count=5000",sep=""))
cuntDF <- data.frame(Country=names(cuntJS$country),Count=unlist(cuntJS$country),row.names = NULL)
cuntDF$Country <- toupper(cuntDF$Country)
if (length(cuntDF$Country) > 0){
# light grey boundaries
l <- list(color = toRGB("grey"), width = 0.5)
# specify map projection/options
g <- list(showframe = FALSE,showcoastlines = FALSE,projection = list(type = 'Mercator'))
f <- plot_ly(cuntDF, z = Count, text = Country, locations = Country, type = 'choropleth',
color = Count, colors = 'Blues', marker = list(line = l),
colorbar = list(title = 'Country')) %>%
layout(title = 'Records by Country',geo = g)
plotly_IMAGE(f,format = "png",out_file =paste0(ASIHcode,"/figures/",ASIHcode,"-localities-continents-PLOTLY-MAP.png"),height = 1080 )
}else{
print(paste0("No Locality data-",ASIHcode))
}
famsJS <- fromJSON(paste("http://search.idigbio.org/v2/summary/top/records/?rq={%22recordset%22:",recordset,",%22collectioncode%22:",collectioncode,",%22institutioncode%22:",institutioncode,"}&top_fields=[%22family%22]&count=5000",sep=""))
famDF <- data.frame(Family=names(famsJS$family),Count=unlist(famsJS$family),row.names = NULL)
write.csv(famDF, file = paste(ASIHcode,"/data/",ASIHcode,"-RAW_famlies.csv",sep=""),row.names = FALSE)
}
contDF <- data.frame(Continent=names(contJS$continent),Count=unlist(contJS$continent),row.names = NULL)
contDF <- data.frame(Continent=names(contJS$countrycode),Count=unlist(contJS$countrycode),row.names = NULL)
contDF <- country2Region(regionType = "GEO3major", inFile = contDF,joinCode = "ISO3",FUN = "sum",nameDataColumn = "Count",nameJoinColumn = "Continent")
contDF <- data.frame(Continent=names(contJS$countrycode),Count=unlist(contJS$countrycode),row.names = NULL)
contDF$Continent <- toupper(contDF$Continent)
contDF <- country2Region(regionType = "GEO3major", inFile = contDF,joinCode = "ISO3",FUN = "sum",nameDataColumn = "Count",nameJoinColumn = "Continent")
View(contDF)
contDF <- names(c("Continent","Count"))
contDF <- data.frame(Continent=names(contJS$countrycode),Count=unlist(contJS$countrycode),row.names = NULL)
contDF$Continent <- toupper(contDF$Continent)
contDF <- country2Region(regionType = "GEO3major", inFile = contDF,joinCode = "ISO3",FUN = "sum",nameDataColumn = "Count",nameJoinColumn = "Continent")
names(contDF) <- names(c("Continent","Count"))
View(contDF)
contDF <- data.frame(Continent=names(contJS$countrycode),Count=unlist(contJS$countrycode),row.names = NULL)
contDF$Continent <- toupper(contDF$Continent)
contDF <- country2Region(regionType = "GEO3major", inFile = contDF,joinCode = "ISO3",FUN = "sum",nameDataColumn = "Count",nameJoinColumn = "Continent")
str(contDF)
attr(contDF)
attr(contDF,"names")
attr(contDF,"row.names")
contDF$Continent <- attach(contDF,"row.names")
contDF$Continent <- attr(contDF,"row.names")
View(contDF)
names(contDF) <- c("Count","Continent")
View(contDF)
pb <- progress_bar$new(total = length(bbRS$institutioncode))
for(i in 1:length(bbRS$ASIHCode))
{
pb$tick()
aaaa <- bbRS[bbRS$ASIHCode==bbRS$ASIHCode[i],]
ASIHcode <- unique(aaaa$ASIHCode)
dir.create(as.character(ASIHcode),showWarnings = FALSE)
dir.create(paste(as.character(ASIHcode),"/data",sep = ""),showWarnings = FALSE)
dir.create(paste(as.character(ASIHcode),"/figures",sep = ""),showWarnings = FALSE)
recordset <- if(length(aaaa$recordset) > 1){URLencode(toJSON(as.character(aaaa$recordset)))}else{paste("%22",URLencode(as.character(aaaa$recordset)),"%22",sep="")}
collectioncode <- if(length(aaaa$collectioncode) > 1){URLencode(toJSON(as.character(aaaa$collectioncode)))}else{paste("%22",URLencode(as.character(aaaa$collectioncode)),"%22",sep="")}
institutioncode <- if(length(aaaa$institutioncode) > 1){URLencode(toJSON(as.character(aaaa$institutioncode)))}else{paste("%22",URLencode(as.character(aaaa$institutioncode)),"%22",sep="")}
contJS <- fromJSON(paste("http://search.idigbio.org/v2/summary/top/records/?rq={%22recordset%22:",recordset,",%22collectioncode%22:",collectioncode,",%22institutioncode%22:",institutioncode,"}&top_fields=[%22countrycode%22]&count=5000",sep=""))
contDF <- data.frame(Continent=names(contJS$countrycode),Count=unlist(contJS$countrycode),row.names = NULL)
contDF$Continent <- toupper(contDF$Continent)
contDF <- country2Region(regionType = "GEO3major", inFile = contDF,joinCode = "ISO3",FUN = "sum",nameDataColumn = "Count",nameJoinColumn = "Continent")
contDF$Continent <- attr(contDF,"row.names")
names(contDF) <- c("Count","Continent")
locality_plot <- function(ASIHcode,contDF){
#Locality plot
# Pie Chart with Percentages
if (length(contDF$Continent) > 0){
pdf(paste(ASIHcode,"/figures/",ASIHcode,"-localities-continents-PIE.pdf",sep=""))
slices <- contDF$Count
lbls <- contDF$Continent
pie3D(slices,labels=lbls,explode=0.01,main=paste0(ASIHcode," Collection Localities- Continent"))
#         pie(slices,labels = lbls,
#             main=paste(ASIHcode," Collection Localities- Continent \n using GEO-3 Major",sep=""))
dev.off()
ds <- data.frame(labels = contDF$Continent,
values = contDF$Count)
p <- plot_ly(ds, labels = labels, values = values, type = "pie") %>%
layout(title = paste0(ASIHcode," Collection Localities- Continent"))
plotly_IMAGE(p,format = "png",out_file =paste0(ASIHcode,"/figures/",ASIHcode,"-localities-continents-PLOTLY.png"),height = 1080 )
}else{
print(paste0("No Locality data-",ASIHcode))
}
locality_plot(ASIHcode,contDF)
##World Choropleth Map
cuntJS <- fromJSON(paste("http://search.idigbio.org/v2/summary/top/records/?rq={%22recordset%22:",recordset,",%22collectioncode%22:",collectioncode,",%22institutioncode%22:",institutioncode,"}&top_fields=[%22countrycode%22]&count=5000",sep=""))
cuntDF <- data.frame(Country=names(cuntJS$country),Count=unlist(cuntJS$country),row.names = NULL)
cuntDF$Country <- toupper(cuntDF$Country)
if (length(cuntDF$Country) > 0){
# light grey boundaries
l <- list(color = toRGB("grey"), width = 0.5)
# specify map projection/options
g <- list(showframe = FALSE,showcoastlines = FALSE,projection = list(type = 'Mercator'))
f <- plot_ly(cuntDF, z = Count, text = Country, locations = Country, type = 'choropleth',
color = Count, colors = 'Blues', marker = list(line = l),
colorbar = list(title = 'Country')) %>%
layout(title = 'Records by Country',geo = g)
plotly_IMAGE(f,format = "png",out_file =paste0(ASIHcode,"/figures/",ASIHcode,"-localities-continents-PLOTLY-MAP.png"),height = 1080 )
}else{
print(paste0("No Locality data-",ASIHcode))
}
famsJS <- fromJSON(paste("http://search.idigbio.org/v2/summary/top/records/?rq={%22recordset%22:",recordset,",%22collectioncode%22:",collectioncode,",%22institutioncode%22:",institutioncode,"}&top_fields=[%22family%22]&count=5000",sep=""))
famDF <- data.frame(Family=names(famsJS$family),Count=unlist(famsJS$family),row.names = NULL)
write.csv(famDF, file = paste(ASIHcode,"/data/",ASIHcode,"-RAW_famlies.csv",sep=""),row.names = FALSE)
}
length(contJS$countrycode)
pb <- progress_bar$new(total = length(bbRS$institutioncode))
for(i in 1:length(bbRS$ASIHCode))
{
pb$tick()
locality_plot <- function(ASIHcode,contDF){
#Locality plot
# Pie Chart with Percentages
if (length(contDF$Continent) > 0){
pdf(paste(ASIHcode,"/figures/",ASIHcode,"-localities-continents-PIE.pdf",sep=""))
slices <- contDF$Count
lbls <- contDF$Continent
pie3D(slices,labels=lbls,explode=0.01,main=paste0(ASIHcode," Collection Localities- Continent"))
#         pie(slices,labels = lbls,
#             main=paste(ASIHcode," Collection Localities- Continent \n using GEO-3 Major",sep=""))
dev.off()
ds <- data.frame(labels = contDF$Continent,
values = contDF$Count)
p <- plot_ly(ds, labels = labels, values = values, type = "pie") %>%
layout(title = paste0(ASIHcode," Collection Localities- Continent"))
plotly_IMAGE(p,format = "png",out_file =paste0(ASIHcode,"/figures/",ASIHcode,"-localities-continents-PLOTLY.png"),height = 1080 )
}else{print(paste0("No Locality data-",ASIHcode))
}
aaaa <- bbRS[bbRS$ASIHCode==bbRS$ASIHCode[i],]
ASIHcode <- unique(aaaa$ASIHCode)
dir.create(as.character(ASIHcode),showWarnings = FALSE)
dir.create(paste(as.character(ASIHcode),"/data",sep = ""),showWarnings = FALSE)
dir.create(paste(as.character(ASIHcode),"/figures",sep = ""),showWarnings = FALSE)
recordset <- if(length(aaaa$recordset) > 1){URLencode(toJSON(as.character(aaaa$recordset)))}else{paste("%22",URLencode(as.character(aaaa$recordset)),"%22",sep="")}
collectioncode <- if(length(aaaa$collectioncode) > 1){URLencode(toJSON(as.character(aaaa$collectioncode)))}else{paste("%22",URLencode(as.character(aaaa$collectioncode)),"%22",sep="")}
institutioncode <- if(length(aaaa$institutioncode) > 1){URLencode(toJSON(as.character(aaaa$institutioncode)))}else{paste("%22",URLencode(as.character(aaaa$institutioncode)),"%22",sep="")}
contJS <- fromJSON(paste("http://search.idigbio.org/v2/summary/top/records/?rq={%22recordset%22:",recordset,",%22collectioncode%22:",collectioncode,",%22institutioncode%22:",institutioncode,"}&top_fields=[%22countrycode%22]&count=5000",sep=""))
if (length(contJS$countrycode) >0){
contDF <- data.frame(Continent=names(contJS$countrycode),Count=unlist(contJS$countrycode),row.names = NULL)
contDF$Continent <- toupper(contDF$Continent)
contDF <- country2Region(regionType = "GEO3major", inFile = contDF,joinCode = "ISO3",FUN = "sum",nameDataColumn = "Count",nameJoinColumn = "Continent")
contDF$Continent <- attr(contDF,"row.names")
names(contDF) <- c("Count","Continent")
locality_plot(ASIHcode,contDF)
}else{print(paste0("No Locality data-",ASIHcode))}
##World Choropleth Map
cuntJS <- fromJSON(paste("http://search.idigbio.org/v2/summary/top/records/?rq={%22recordset%22:",recordset,",%22collectioncode%22:",collectioncode,",%22institutioncode%22:",institutioncode,"}&top_fields=[%22countrycode%22]&count=5000",sep=""))
cuntDF <- data.frame(Country=names(cuntJS$country),Count=unlist(cuntJS$country),row.names = NULL)
cuntDF$Country <- toupper(cuntDF$Country)
if (length(cuntDF$Country) > 0){
# light grey boundaries
l <- list(color = toRGB("grey"), width = 0.5)
# specify map projection/options
g <- list(showframe = FALSE,showcoastlines = FALSE,projection = list(type = 'Mercator'))
f <- plot_ly(cuntDF, z = Count, text = Country, locations = Country, type = 'choropleth',
color = Count, colors = 'Blues', marker = list(line = l),
colorbar = list(title = 'Country')) %>%
layout(title = 'Records by Country',geo = g)
plotly_IMAGE(f,format = "png",out_file =paste0(ASIHcode,"/figures/",ASIHcode,"-localities-continents-PLOTLY-MAP.png"),height = 1080 )
}else{
print(paste0("No Locality data-",ASIHcode))
}
famsJS <- fromJSON(paste("http://search.idigbio.org/v2/summary/top/records/?rq={%22recordset%22:",recordset,",%22collectioncode%22:",collectioncode,",%22institutioncode%22:",institutioncode,"}&top_fields=[%22family%22]&count=5000",sep=""))
famDF <- data.frame(Family=names(famsJS$family),Count=unlist(famsJS$family),row.names = NULL)
write.csv(famDF, file = paste(ASIHcode,"/data/",ASIHcode,"-RAW_famlies.csv",sep=""),row.names = FALSE)
}
